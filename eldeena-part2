import pandas as pd
import numpy as np

file_path = 'wdbc.data'

df = pd.read_csv(file_path, delimiter=',')
df.columns =['ID',
             'Diagnosis',
             'radius1', 
             'texture1',
             'perimeter1',
             'area1', 
             'smoothness1',
             'compactness1',
             'concavity1',
             'concave_points1',
             'symmetry1',
             'fractal_dimension1',
             'radius2',
             'texture2',
             'perimeter2',
             'area2',
             'smoothness2',
             'compactness2',
             'concavity2',
             'concave_points2',
             'symmetry2',
             'fractal_dimension2',
             'radius3',
             'texture3',
             'perimeter3',
             'area3',
             'smoothness3',
             'compactness3',
             'concavity3', 
             'concave_points3',
             'symmetry3',
             'fractal_dimension3']
df

columns = [
    ('radius1'),
    ('texture1'),
    ('perimeter1'),
    ('area1'),
    ('smoothness1'),
    ('compactness1'),
    ('concavity1'),
    ('concave_points1'),
    ('symmetry1'),
    ('fractal_dimension1'),
    ('radius2'),
    ('texture2'),
    ('perimeter2'),
    ('area2'),
    ('smoothness2'),
    ('compactness2'),
    ('concavity2'),
    ('concave_points2'),
    ('symmetry2'),
    ('fractal_dimension2'),
    ('radius3'),
    ('texture3'),
    ('perimeter3'),
    ('area3'),
    ('smoothness3'),
    ('compactness3'),
    ('concavity3'),
    ('concave_points3'),
    ('symmetry3'),
    ('fractal_dimension3')
]

for column in columns:
     df[column] = df[column].fillna(df[column].median()) 

print(df.isna().sum())

from sklearn.linear_model import LinearRegression
from sklearn.feature_selection import SequentialFeatureSelector

X = df.drop(columns=['Diagnosis'])
y = df['Diagnosis']

# convert 'Diagnosis' column to binary: M = 1 (malignant), B = 0 (benign)
df['Diagnosis'] = df['Diagnosis'].apply(lambda x: 1 if x == 'M' else 0)

linearreg = LinearRegression()

# forward selection with 4 features
sfs = SequentialFeatureSelector(linearreg, n_features_to_select=4, direction='forward', scoring = 'accuracy')
sfs.fit(X, y)

selected_features = X.columns[sfs.get_support()]
print("Selected features (Forward Selection):", selected_features)

corr_matrix = df.corr()
 
feat_corr = corr_matrix.index[corr_matrix['Diagnosis'].abs() > 0.5].tolist()

# remove 'Diagnosis' if in the list
if 'Diagnosis' in feat_corr:
    feat_cor.remove('Diagnosis')

print("Selected features (Correlation > 0.5):", feat_corr)

from sklearn.linear_model import LassoCV

# cross-validation
lasso = LassoCV(cv=5).fit(X, y)

# features with non-zero coefficients
selected_features_lasso = X.columns[lasso.coef_ != 0]
print("Selected features (Lasso Regression):", selected_features_lasso)
