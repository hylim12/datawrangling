# -*- coding: utf-8 -*-
"""
# [Group_3]

Group Members: 
1. 1211111904 Eldeena Lim Huey Yinn
2. 1211109457 Do Wai Lung
3. 1221305730 Doris Heng
4. 1211108301 Kong Yi Xuan

"""
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

#QUESTION 1

airbnb_df = pd.read_csv("AB_NYC_2019.csv")
print(airbnb_df.isna().sum())
airbnb_df = airbnb_df.dropna(subset=["name", "host_name"])
#Missing values of Last Review column is more than 20%
airbnb_df.drop(columns = 'last_review', inplace = True)
airbnb_df["reviews_per_month"].fillna(0, inplace = True)
print(airbnb_df)

#QUESTION 2

plt.figure(figsize=(16,5))
plt.subplot(1,1,1)
sns.distplot(airbnb_df['price'])
plt.show()

plt.figure(figsize=(16,5))
plt.subplot(1,1,1)
sns.distplot(airbnb_df['reviews_per_month'])
plt.show()

price_hist = sns.boxplot(x = airbnb_df['price'])
price_hist.set_title('Price of Airbnb in NYC')
price_hist.set_xlabel('Price')
price_hist.set_ylabel('Count')

reviews_hist = sns.boxplot(x = airbnb_df['reviews_per_month'])
reviews_hist.set_title('Reviews of Airbnb in NYC')
reviews_hist.set_xlabel('Reviews Per Month')
reviews_hist.set_ylabel('Count')

airbnb_df.plot.scatter(x = "price", y = "reviews_per_month", c = "darkblue")

# List of columns to iterate over
columns = ['price', 'reviews_per_month','minimum_nights','availability_365']

# Loop through each column to create separate boxplots
for column in columns:
    # Calculate the average
    avg_value = airbnb_df[column].mean()
    print(f"Average {column.capitalize()}: {avg_value}")

    # Calculate Q1, Q3, and IQR
    percentile25 = airbnb_df[column].quantile(0.25)
    percentile75 = airbnb_df[column].quantile(0.75)
    print(f"Q1 ({column.capitalize()}):", percentile25)
    print(f"Q3 ({column.capitalize()}):", percentile75)

    iqr = percentile75 - percentile25
    print(f"Interquartile range ({column.capitalize()}):", iqr)

    # Calculate upper and lower limits
    upper_limit = percentile75 + 1.5 * iqr
    lower_limit = percentile25 - 1.5 * iqr
    print(f"Upper limit ({column.capitalize()}):", upper_limit)
    print(f"Lower limit ({column.capitalize()}):", lower_limit)

    # Filter data within upper limit
    filtered_df = airbnb_df[airbnb_df[column] < upper_limit]

    # Create a new figure for each column
    plt.figure()
    
    # Create a boxplot for the current column
    boxplot = sns.boxplot(x=filtered_df[column])
    boxplot.set_title(f'{column.capitalize()} of Airbnb in NYC')
    boxplot.set_xlabel(column.capitalize())
    boxplot.set_ylabel('Count')
    
    # Show the plot
    plt.show()

#QUESTION 3

condition1 = airbnb_df["neighbourhood_group"] == "Manhattan"
condition2 = airbnb_df["room_type"] == "Private room"
data_sub1 = airbnb_df[condition1 & condition2]
print(data_sub1)

data_sub1 = data_sub1[data_sub1["minimum_nights"] >= 3]
data_sub1.sort_values(by =["price"])

data_sub2 = airbnb_df.groupby(["neighbourhood_group","room_type"])
data_sub2.price.mean().reset_index()

airbnb_df['high_demand area'] = airbnb_df['availability_365'] > 300
airbnb_df['revenue'] = airbnb_df['price'] * airbnb_df['minimum_nights']
print (airbnb_df)

max_price = airbnb_df["price"].max()
print("Max:",max_price)
min_price = airbnb_df["price"].min()
print("Min:",min_price)

bins = [0, 100, 500, 1000]
categories = ["budget","moderate","expensive"]
airbnb_df['price_category'] = pd.cut(airbnb_df['price'], bins, labels=categories)
print(airbnb_df)

sum_stat = airbnb_df.groupby(["neighbourhood_group","room_type"])
sum_stat = sum_stat["price"].describe()
print(sum_stat)

avg_avail = airbnb_df.groupby('neighbourhood_group')
avg_avail = avg_avail['availability_365'].mean().reset_index()
print(avg_avail)
