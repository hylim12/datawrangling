"""
[Group_3]
Group Members:

1211111904 Eldeena Lim Huey Yinn
1211109457 Do Wai Lung
1221305730 Doris Heng
1211108301 Kong Yi Xuan
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

# Filter the dataset by Data Wrangling
melb_df = pd.read_csv('melb_data.csv')
missing_percent = melb_df.isnull().mean() * 100
new_df = melb_df.drop(columns=missing_percent[missing_percent > 20].index)
new_df['Car'] = new_df['Car'].fillna(0)
new_df['CouncilArea'] = new_df['CouncilArea'].fillna('Missing')
new_df = new_df[new_df['Landsize'] != 0]

columns = ['Price', 'Distance', 'Landsize', 'Propertycount']
filt_df = new_df.copy()

for column in columns:
    Q1 = filt_df[column].quantile(0.25)
    Q3 = filt_df[column].quantile(0.75)  
    IQR = Q3 - Q1
    lower_limit = Q1 - 1.5 * IQR
    upper_limit = Q3 + 1.5 * IQR
    filt_df = filt_df[(filt_df[column] > lower_limit) & (filt_df[column] < upper_limit)]


filt_df['Date']= pd.to_datetime(filt_df['Date'],errors='coerce', format='%d/%m/%Y')
filt_df = filt_df[filt_df['Date'].notnull()]

### Distribution patterns of the numerical features in the dataset to observe skewness
num_cols = filt_df.select_dtypes(include=['float64', 'int64']).columns
plt.figure(figsize=(15, 20))

# Loop through the numerical columns and plot histograms
for i, col in enumerate(num_cols, 1):
    plt.subplot(6, 2, i)
    sns.histplot(filt_df[col], bins=30, kde=False)
    plt.title(f'Distribution of {col}')
    plt.xlabel(col)
    plt.ylabel('Frequency')
    plt.tight_layout()
plt.show()
"""
Based on the diagrams above, we can observe 11 histogram graphs from all numerical features in the Melbourne Housing Dataset.
The features for histograms in order are Rooms, Price, Distance, Postcode, Bedroom2, Bathroom, Car, Landsize, Lattitude, Longtitude and Propertycount.
For the Distribution of Rooms, we can observe that most properties have 2, 3 or 4 rooms.
For the Distribution of Price, the distribution appears to be right-skewed since most values are priced between 0.5 million to 1.5 million.
For the Distribution of Distance, the distribution is evenly spread out with most properties being between 5 and 15 units of distance from the central location.
For the Distribution of Postcode, we can decipher that the distribution is slightly right-skewed with properties in lower postcode areas and few properties in areas higher than 3400.
For the Distribution of Bedroom2, majority of the properties in Melbourne Housing dataset have 2 to 4 bedrooms.
For the Distribution of Bathroom, most properties have 1 or 2 bathrooms with sharp decline at 3 properties and above.
For the Distribution of Car, most houses have parking space to accomodate 1 or 2 cars.
For the Distribution of Landsize, the distribution is also right-skewed with most properties between 0 and 600 units. There seems to be outliers in this histogram but few in number.
For the Distribution of Lattitude, the properties are spread evenly in terms of geographic location which appears right-skewed and centered around lattitude of -37.8.
For the Distribution of Longtitude, the distribution is also relatively normal located between 144.8 and 145.1. 
For the Distribution of Propertycount, this feature is categorised according to neighbourhood with properties spread out in various locations.
"""

"""Histogram Distribution of Properties Listed in Melbourne according to Month
# Obtain 'Month' from Date column 
filt_df['Month'] = filt_df['Date'].dt.month

plt.figure(figsize=(12, 5))
sns.histplot(filt_df['Month'], bins=12, kde=False)
plt.xticks(ticks=range(1, 13), labels=['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])
plt.title('Month Property was Listed')
plt.xlabel('Month')
plt.ylabel('Frequency')
plt.show()

month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
bin_centers = np.arange(0.5, 12, 1)
plt.figure(figsize=(15, 8))
plt.subplot(1, 2, 1)
sns.histplot(filt_df['Month'], bins = 12)
plt.xlabel('Month')
plt.ylabel('Frequency')
plt.xticks(ticks=bin_centers, labels=month)
plt.show()
"""

### Scatterplots for Landsize, Rooms, Bathroom, Bedroom VS Price
plt.figure(figsize = (12, 8))
sns.scatterplot(x = filt_df['Landsize'], y = filt_df['Price'], s = 5, c = 'blue')
plt.title('Scatter Plot: Landsize vs Price')
plt.xlabel('Landsize')
plt.ylabel('Price')
plt.show()

plt.figure(figsize = (12, 8))
sns.scatterplot(x = filt_df['Rooms'], y = filt_df['Price'], s = 5, c = 'black')
plt.title('Scatter Plot: Rooms vs Price')
plt.xlabel('Rooms')
plt.ylabel('Price')
plt.show()

plt.figure(figsize = (12, 8))
sns.scatterplot(x = filt_df['Bedroom2'], y = filt_df['Price'], s = 5, c = 'red')
plt.title('Scatter Plot: Bedroom2 vs Price')
plt.xlabel('Bedroom2')
plt.ylabel('Price')
plt.show()

plt.figure(figsize = (12, 8))
sns.scatterplot(x = filt_df['Bathroom'], y = filt_df['Price'], s = 5, c = 'green')
plt.title('Scatter Plot: Bathroom vs Price')
plt.xlabel('Bathroom')
plt.ylabel('Price')
plt.show()

### Barchart of Average Price of Grouped Regions, X-axis = Region, Y-axis = Average Price
avgregion_price = filt_df.groupby('Regionname')['Price'].mean().reset_index()

plt.figure(figsize=(12, 8))
sns.barplot(x='Regionname', y='Price', data=avgregion_price)
plt.title('Average Listing Prices Across Regions')
plt.xlabel('Region')
plt.ylabel('Average Price')
plt.xticks(rotation=45)
plt.show()
