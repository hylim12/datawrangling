"""
[Group_3]
Group Members:

1211111904 Eldeena Lim Huey Yinn
1211109457 Do Wai Lung
1221305730 Doris Heng
1211108301 Kong Yi Xuan
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Filter the dataset by Data Wrangling
melb_df = pd.read_csv('melb_data.csv')
missing_percent = melb_df.isnull().mean() * 100
new_df = melb_df.drop(columns=missing_percent[missing_percent > 20].index)
new_df['Car'] = new_df['Car'].fillna(0)
new_df['CouncilArea'] = new_df['CouncilArea'].fillna('Missing')
new_df = new_df[new_df['Landsize'] != 0]

columns = ['Price', 'Distance', 'Landsize', 'Propertycount']
filt_df = new_df.copy()

for column in columns:
    Q1 = filt_df[column].quantile(0.25)
    Q3 = filt_df[column].quantile(0.75)  
    IQR = Q3 - Q1
    lower_limit = Q1 - 1.5 * IQR
    upper_limit = Q3 + 1.5 * IQR
    filt_df = filt_df[(filt_df[column] > lower_limit) & (filt_df[column] < upper_limit)]


filt_df['Date']= pd.to_datetime(filt_df['Date'],errors='coerce', format='%d/%m/%Y')
filt_df = filt_df[filt_df['Date'].notnull()]

### Distribution patterns of the numerical features in the dataset to observe skewness
num_cols = filt_df.select_dtypes(include=['float64', 'int64']).columns
plt.figure(figsize=(15, 20))

# Loop through the numerical columns and plot histograms
for i, col in enumerate(num_cols, 1):
    plt.subplot(6, 2, i)
    sns.histplot(filt_df[col], bins=30, kde=False)
    plt.title(f'Distribution of {col}')
    plt.xlabel(col)
    plt.ylabel('Frequency')
    plt.tight_layout()
plt.show()
"""
Based on the diagrams above, we can observe 11 histogram graphs from all numerical features in the Melbourne Housing Dataset.
The features for histograms in order are Rooms, Price, Distance, Postcode, Bedroom2, Bathroom, Car, Landsize, Lattitude, Longtitude and Propertycount.
For the Distribution of Rooms, we can observe that most properties have 2, 3 or 4 rooms.
For the Distribution of Price, the distribution appears to be right-skewed since most values are priced between 0.5 million to 1.5 million.
For the Distribution of Distance, the distribution is evenly spread out with most properties being between 5 and 15 units of distance from the central location.
For the Distribution of Postcode, we can decipher that the distribution is slightly right-skewed with properties in lower postcode areas and few properties in areas higher than 3400.
For the Distribution of Bedroom2, majority of the properties in Melbourne Housing dataset have 2 to 4 bedrooms.
For the Distribution of Bathroom, most properties have 1 or 2 bathrooms with sharp decline at 3 properties and above.
For the Distribution of Car, most houses have parking space to accomodate 1 or 2 cars.
For the Distribution of Landsize, the distribution is also right-skewed with most properties between 0 and 600 units. There seems to be outliers in this histogram but few in number.
For the Distribution of Lattitude, the properties are spread evenly in terms of geographic location which appears right-skewed and centered around lattitude of -37.8.
For the Distribution of Longtitude, the distribution is also relatively normal located between 144.8 and 145.1. 
For the Distribution of Propertycount, this feature is categorised according to neighbourhood with properties spread out in various locations.
"""

### Scatterplots for Landsize, Rooms, Bathroom, Bedroom VS Price
plt.figure(figsize = (12, 8))
sns.scatterplot(x = filt_df['Landsize'], y = filt_df['Price'], s = 5, c = 'blue')
plt.title('Scatter Plot: Landsize vs Price')
plt.xlabel('Landsize')
plt.ylabel('Price')
plt.show()

plt.figure(figsize = (12, 8))
sns.scatterplot(x = filt_df['Rooms'], y = filt_df['Price'], s = 5, c = 'black')
plt.title('Scatter Plot: Rooms vs Price')
plt.xlabel('Rooms')
plt.ylabel('Price')
plt.show()

plt.figure(figsize = (12, 8))
sns.scatterplot(x = filt_df['Bedroom2'], y = filt_df['Price'], s = 5, c = 'red')
plt.title('Scatter Plot: Bedroom2 vs Price')
plt.xlabel('Bedroom2')
plt.ylabel('Price')
plt.show()

plt.figure(figsize = (12, 8))
sns.scatterplot(x = filt_df['Bathroom'], y = filt_df['Price'], s = 5, c = 'green')
plt.title('Scatter Plot: Bathroom vs Price')
plt.xlabel('Bathroom')
plt.ylabel('Price')
plt.show()

"""
Based on the Landsize VS Price scatterplot, the plot has a large spread of data points signifiying variance in Price for different land sizes.
The data points are widely scattered with no clear trend, hence no clear linear relationship or correlation between Landsize and Price.
There is a higher concentration of data points between landsizes of 100 to 600 meaning more data samples in that range.

Based on the Rooms VS Price scatterplot, the data appears heavily concentrated around certain room counts such as 2, 4 and 6 rooms.
The relationship between the number of rooms and price has no trend but the price tends to increase with more rooms though the data is spread out.
Prices also range widely with some listings reaching up to 2.5 million. 
There is no clear linear trend but the price tends to increase with more rooms although data is quite spread out.

Based on the Bedroom2 VS Price scatterplot, the plot compares Bedroom2 against price with many vertical clusters around specific number of bedrooms.
The bedroom counts are around 2 to 5 bedrooms and prices from lower to over 2 million.
Generally, the higher the number of bedrooms, the higher the prices, although there are outliers.

Based on the Bathroom VS Price scatterplot, it examines the relationship between the number of bathrooms and price.
The relationship is not strictly linear as there are clusters at certain number of bathrooms such as 1,2 and 3 with price spread out.
Prices tend to increase slightly with more bathrooms with most listings staying under 2 million but there are some outliers in the higher price range.
"""

### Barchart Distribution of Properties Listed in Melbourne according to Month
# Extract 'Month' from Date column 
filt_df['Month'] = filt_df['Date'].dt.month

month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
plt.figure(figsize=(12, 6))
sns.countplot(x=filt_df['Month'])
plt.xticks(ticks=range(12), labels=month)
plt.title('Number of Properties Listed per Month in Melbourne')
plt.xlabel('Month')
plt.ylabel('Number of Listings')
plt.show()

"""
The bar chart above illustrates the number of property listings in Melbourne across each month.
For the months of April to September, we can observe that it has the highest number of property listings in a year, particularly in May, July and September.
This could mean that there is a higher demand during these months when people are more likely to move or invest in properties.
Whereas for the months of October to February, especially October, February and December, there are fewer properties available in these months.
Hence, property prices in Melbourne might follow a seasonal pattern with lower prices as demand tends to increase despite high availability.
This is because the inverse relationship between number of listings and property prices is a common trend in real estate markets.
"""

### Barchart of Average Price of Grouped Regions, X-axis = Region, Y-axis = Average Price
avgregion_price = filt_df.groupby('Regionname')['Price'].mean().reset_index()

plt.figure(figsize=(12, 8))
sns.barplot(x='Regionname', y='Price', data=avgregion_price)
plt.title('Average Listing Prices Across Regions')
plt.xlabel('Region')
plt.ylabel('Average Price')
plt.xticks(rotation=45)
plt.show()

"""
Based on the bar chart above, the diagram visualises the average listing prices for properties in various regions.
Furthermore, the Southern Metropolitan area has the highest average listing price, exceeding 1.3 million while Northern Victoria has the lowest average listing price, below 900,000.
Other regions like Eastern Metropolitan and South Eastern Metropolitan have moderate prices whereas Northern Metropolitan and Western Metropolitan exhibit lower average listing prices.
Hence, we can deduce that Southern Metropolitan is a more expensive area and Northern Victoria region is more affordable based on listing prices.
There is a dispersion in average listing prices across regions suggesting regional factors such as location, infrastructure and demand influencing property prices.
"""
### Scatterplot of Propertycount per Region and Average Price
# Group by region name and calculate the average price and total property count
regions_stats = filt_df.groupby('Regionname').agg({'Price': 'mean','Propertycount': 'sum'}).reset_index()

print(regions_stats)
print()

# Plot the scatterplot of Total Property Count by Region and Average Price
plt.figure(figsize=(10, 6))
sns.scatterplot(x = 'Propertycount', y = 'Price', data = regions_stats, hue = 'Regionname', style = 'Regionname', s = 100)
plt.title('Scatterplot: Total Property Count by Region vs Average Price')
plt.xlabel('Total Property Count (units)')
plt.ylabel('Average Price (dollars)')
plt.legend(title='Region')
plt.grid(True)
plt.show()
"""
The scatterplot depicting Total Property Count by Region against Average Price reveals an absence of a consistent correlation between the total property count in a region and the average price. 
The x-axis denotes the total property count by region, and the y-axis indicates the average price. Every point on the scatterplot signifies an area, which are differentiated by distinct colours and styles for enhanced clarity. 
Regions like Northern Metropolitan has the highest total property count; yet, the average price in this area is very reasonable relative to other regions. Conversely, Southern Metropolitan, with fewer homes than Northern Metropolitan, exhibits the highest average price. 
This analysis indicates that an increased number of properties in a region does not inherently result in elevated pricing. Additional factors such as proximity to amenities and economic conditions likely exert a more substantial influence on home values. 
Consequently, it can be inferred that the link between property quantity and price is intricate, with no apparent direct correlation discernible from the data.
"""

### Scatterplot of Distance from City Centre(CBD) and Listing Prices
plt.figure(figsize=(10,6))
plt.scatter(filt_df['Distance'], filt_df['Price'], alpha = 0.5, color = 'blue')
plt.title('Scatterplot: Distance from City Center vs Price')
plt.xlabel('Distance from CBD (km)')
plt.ylabel('Price (dollars)')
plt.grid(True)
plt.tight_layout()
plt.show()
"""
From the scatterplot showing the relationship between Distance from the City Center and Price, we observe a clear trend, which is as the distance from the city center increases, the property price tends to decrease. 
The x-axis represents the distance from Melbourne's central business district (CBD), and the y-axis represents the listing price. The plot reveals that properties located within 5-10 km of the CBD generally command the highest prices, reflecting the desirability of urban proximity. 
As distance from the CBD increases, prices gradually decrease, with the majority of properties farther than 10 km from the city center having lower listing prices. 
However, some properties located further from the CBD still have relatively high prices, which could be attributed to premium suburbs or areas with unique amenities or desirable features. 
In conclusion, the analysis shows that distance from the city center is a significant factor affecting property prices, with properties closer to the city center tending to have higher prices, while those farther away generally have lower listing prices.
"""
